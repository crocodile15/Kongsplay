name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Python setup (only runs if requirements.txt exists)
    - name: Set up Python
      if: contains(github.event.repository.contents, 'requirements.txt')
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Python dependencies
      if: contains(github.event.repository.contents, 'requirements.txt')
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt || echo "Dependency installation failed"

    # Node.js setup (only runs if package.json exists)
    - name: Set up Node.js
      if: contains(github.event.repository.contents, 'package.json')
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Node.js dependencies
      if: contains(github.event.repository.contents, 'package.json')
      run: |
        npm install || echo "NPM install failed"
        npm run build --if-present || echo "Build script failed"

    # Run tests (customize for your framework)
    - name: Run tests
      run: |
        if [ -f "requirements.txt" ]; then
          python -m pytest || echo "Tests failed"
        elif [ -f "package.json" ]; then
          npm test || echo "Tests failed"
        fi

    # Health check (verify server starts)
    - name: Verify application starts
      run: |
        # Start Python app in background
        if [ -f "app.py" ]; then
          nohup python app.py > server.log 2>&1 &
          sleep 5
          curl -f http://localhost:5000/ || exit 1
        # Start Node app in background
        elif [ -f "server.js" ]; then
          nohup node server.js > server.log 2>&1 &
          sleep 5
          curl -f http://localhost:3000/ || exit 1
        fi
        cat server.log

    # Only runs on main branch pushes (not PRs)
    - name: Deploy to Vercel (optional)
      if: github.ref == 'refs/heads/main'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
